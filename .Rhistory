<<<<<<< HEAD
Salary < 5000
dane[Salary<5000,]
Salary < 5000
dane[Salary<5000,]
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, geom="bar")
rm(dane)
head(dane)
source("./Scripts/data_generation_and_description.R")
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, geom="bar")
Salary
source("./Scripts/data_generation_and_description.R")
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, geom="bar")
source("./Scripts/setting_up_librarie.R")
source("./Scripts/setting_up_libraries.R")
source("./Scripts/data_generation_and_description.R")
Salary
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, geom="bar")
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, geom="bar")
qplot(dane$Salary, data=dane[dane$Salary  < 5000,], fill=Gender, geom="bar")
source("./Scripts/data_generation_and_description.R")
attach(dane) # to call the collumnes
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, geom="bar")
colnames(dane)
Histogram_Salary <-
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, geom="bar") # to draw histogram in ggplot2
print(Histogram_Salary)
attach(dane)                                           # to call the collumnes
Histogram_Salary <-
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, ylab = "Number of people", geom="bar") # to draw histogram in ggplot2
comparing_times
<-
attach(dane)                                           # to call the collumnes
Histogram_Salary <-
qplot(Salary, data=dane[Salary  < 5000,], fill=Gender, ylab = "Number of people", geom="bar") # to draw histogram in ggplot2
print(Histogram_Salary)
attach(dane)                                           # to call the collumnes
colnames(dane)
Time to office
source("./Scripts/data_generation_and_description.R") #  Do download data in work space
colnames(dane)
attach(dane)                                           # to call the collumnes
Time_to_office
colnames(dane)
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office)) + geom_point()
print(distance)
distance <- distance + stat_quantile()
print(distance)
library(quantreg)
install.packeges(quantreg)
install.packages(quantreg)
install.packages("quantreg")
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office)) + geom_point(colour = factor(Gender), size = 3)
distance <- distance + stat_quantile() + opts(legend.position="top") + scale_color_manual(values = c("red", "green"))
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office)) + geom_point(colour = factor(Gender), size = 3)
distance <- distance + stat_quantile()  + scale_color_manual(values = c("red", "green"))
print(distance)
distance <- distance + stat_quantile()  + legend()
dane$Gender
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office)) + geom_point(colour = factor(Gender), size = 3)
distance <- distance + stat_quantile()  + scale_color_manual(values = c("mezczyzna", "kobieta"))
print(distance)
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office, color=factor(Gender)))
print(distance)
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office, color=variable)) + geom_point(colour = factor(Gender), size = 3)
print(distance)
geom_point(color = factor(Gender), size = 3)
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office, color=variable)) +
geom_point(color = factor(Gender), size = 3)
print(distance)
distance <- ggplot(dane, aes(Distance_to_office, Time_to_office, color=variable)) +
geom_point(color = factor(Gender), size = 3)
distance <- distance + stat_quantile()  + scale_color_manual(values = c("mezczyzna", "kobieta"))
print(distance)
distance <- ggplot(dane, aes(Distance_to_office, Time_to_office, color=variable)) +
geom_point(color = factor(Gender), size = 3)
distance <- distance + stat_quantile()  + scale_color_manual(name = "Gender", values = c("mezczyzna", "kobieta"))
print(distance)
distance <- ggplot(dane, aes(Distance_to_office, Time_to_office)) +
geom_point(color = factor(Gender), size = 3)
distance <- distance + stat_quantile()  + scale_color_manual(name = "Gender", values = c("mezczyzna", "kobieta"))
print(distance)
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office)) + geom_point(colour = factor(Gender), size = 3)
print(distance)
distance <- distance + stat_quantile()  + scale_color_manual(values = c("mezczyzna", "kobieta"))
print(distance)
distance <- ggplot(dane, aes(Distance_to_office ,Time_to_office)) + geom_point(colour = factor(Gender), size = 3)
distance <- distance + stat_quantile()
print(distance)
qplot(carat, data = diamonds, geom="histogram", binwidth = 0.1)
qplot(carat, data = diamonds, geom="histogram", binwidth = 0.1)
qplot(carat, price, data = diamonds, colour=clarity)
qplot(carat, data = diamonds, geom="histogram")
qplot(carat, data = diamonds, geom="histogram", binwidth = 0.1)
qplot(carat, data = diamonds, geom="histogram", binwidth = 0.01)
qplot(carat, data = diamonds, geom="histogram", binwidth = 1)
qplot(wt, mpg, data=mtcars, colour=qsec, size=I(3))
p <- ggplot(diamonds, aes(x=price))
p + geom_histogram()
p + stat_bin(geom="area")
p + stat_bin(geom="point")
p + stat_bin(geom="line")
p + geom_histogram(aes(fill = clarity))
colnames(dane)
source("./Scripts/data_generation_and_description.R") #  Do download data in work space
cut(dane[, 5], c(18, 25, 35, 50, 60, 80),
right = F)
colnames(dane)
cut(Age_in_2007, c(18, 25, 35, 50, 60, 80),
right = F)
satisfaction <-
qplot(
cut(Age_in_2007, c(18, 25, 35, 50, 60, 80),
right = F),
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar"
) +
opts(legend.position="top")
satisfaction <-
qplot(
cut(Age_in_2007, c(18, 25, 35, 50, 60, 80),
right = F),
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar"
)
print(satisfaction)
qplot(
Age_in_2007,
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar"
)
qplot(
Age_in_2007,
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar",
binwidth = 2
)
qplot(
Age_in_2007,
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar",
binwidth = 4
)
qplot(
Age_in_2007,
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar",
binwidth = 4
)
qplot(
Age_in_2007,
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar",
binwidth = 3
)
qplot(
Age_in_2007,
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar",
binwidth = 3
) + coord.flip()
qplot(
Age_in_2007,
data=dane,
fill=Satisfaction,
ylab = "Number of people",
geom="bar",
binwidth = 3
) + coord_flip()
qplot(
Age_in_2007,
data=dane,
fill=Satisfaction,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3
) + coord_flip()
qplot(
Age_in_2007,
data=dane,
alpha=Satisfaction,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3
) + coord_flip()
qplot(
Age_in_2007,
data=dane,
alpha=Satisfaction,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
color="green",
binwidth = 3
) + coord_flip()
qplot(
Age_in_2007,
data=dane,
alpha=Satisfaction,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
colour="green",
binwidth = 3
) + coord_flip()
qplot(
Age_in_2007,
data=dane,
alpha=factor(Satisfaction),
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3
) + coord_flip()
p + stat_bin(geom="point")
p + stat_bin(geom="line")
p + geom_histogram(aes(fill = clarity))
p + geom_histogram(aes(y = ..density..))
# Setting vs mapping ---------------------------------------------------------
p <- ggplot(diamonds, aes(x=carat,y=price))
# What will this do?
p + geom_point(aes(colour = "green"))
p + geom_point(colour = "green")
p + geom_point(aes(colour = "green"))
p + geom_point(colour = "green")
p + geom_point(colour = colour)
qplot(
Age_in_2007,
data=dane,
alpha=Satisfaction,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3
) + coord_flip() + scale_colour_gradient(limits=c(3, 4))
qplot(
Age_in_2007,
data=dane,
alpha=Satisfaction,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
color = hello
) + coord_flip() + scale_colour_gradient(limits=c(3, 4))
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
color = Satisfaction
) + coord_flip() + scale_colour_gradient(limits=c(3, 4))
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
color = Satisfaction
) + coord_flip() + scale_colour_brewer()
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
color = Satisfaction
) + coord_flip() + scale_colour_brewer("Satisfaction")
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
color = Satisfaction
) + coord_flip() + scale_colour_brewer("Satisfaction")
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = Satisfaction
) + coord_flip() + scale_fill_brewer()
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = Satisfaction
) + coord_flip() + scale_fill_brewer(palette=3)
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = Satisfaction
) + coord_flip() + scale_fill_brewer(palette=1)
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = Satisfaction
) + coord_flip() + scale_fill_brewer(palette=2)
is.ordered(Satisfaction)
attach(dane)                                           # to call the collumnes
is.ordered(Satisfaction)
levels(Satisfaction)
ordered_Satisfaction <- factor(
Satisfaction,
levels=   c("OKROPNE",
"NIESZCZESLIWE",
"NIEZBYT UDANE",
"ANI DOBRE, ANI ZLE",
"UDANE",
"DOSYC DOBRE",
"WSPANIALE"),
ordered=TRUE
)
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = ordered_Satisfaction
) + coord_flip() + scale_fill_brewer(palette=2)
satisfaction <-
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = ordered_Satisfaction
) + coord_flip() + scale_fill_brewer(palette=2) + opts(legend.position="top")
print(satisfaction)
satisfaction <-
qplot(
Age_in_2007,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = ordered_Satisfaction
) + coord_flip() + scale_fill_brewer(palette=2)
print(satisfaction)
source("./Scripts/data_generation_and_description.R") #  Do download data in work space
View(dane)
Age_in_2007
probability_of_satisfaction <- function(x){
for (i in 1:length(x[1, ])) {
y[, i] = x[, i]/sum(x[, i])
}
probability_of_satisfaction <-
qplot(
Age_in_2007, y=probability_of_satisfaction,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = ordered_Satisfaction
) +
coord_flip() +                                          # horizontal becomes vertical, and vertical, horizontal
scale_fill_brewer(palette=2, name="Satisfaction level") # colored pallet in legend
attach(dane)                                           # to call the collumnes
ordered_Satisfaction <- factor(
Satisfaction,
levels=   c("OKROPNE",
"NIESZCZESLIWE",
"NIEZBYT UDANE",
"ANI DOBRE, ANI ZLE",
"UDANE",
"DOSYC DOBRE",
"WSPANIALE"),
ordered=TRUE
)
probability_of_satisfaction <- function(x){
for (i in 1:length(x[1, ])) {
y[, i] = x[, i]/sum(x[, i])
}
histogram_probability_of_satisfaction <-
qplot(
Age_in_2007, y=probability_of_satisfaction,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = ordered_Satisfaction
) +
coord_flip() +                                          # horizontal becomes vertical, and vertical, horizontal
scale_fill_brewer(palette=2, name="Satisfaction level") # colored pallet in legend
detach(dane)
print(histogram_probability_of_satisfaction)
probability_of_satisfaction <- function(x){
for (i in 1:length(x[1, ])) {
y[, i] = x[, i]/sum(x[, i])}
}
histogram_probability_of_satisfaction <-
qplot(
Age_in_2007, y=probability_of_satisfaction,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = ordered_Satisfaction
) +
coord_flip() +                                          # horizontal becomes vertical, and vertical, horizontal
scale_fill_brewer(palette=2, name="Satisfaction level") # colored pallet in legend
detach(dane)
print(histogram_probability_of_satisfaction)
print(histogram_probability_of_satisfaction)
probability_of_satisfaction <- function(x){
for (i in 1:length(satisfaction[1, ])) {
y[, i] = Satisfaction[, i]/sum(Satisfaction[, i])}
}
histogram_probability_of_satisfaction <-
{
\setkeys{Gin}{width=1.0\textwidth}
\begin{figure}
\centering
<<fig=true>>==        % sweave understands that it will be a figure
source("./Scripts/probability_of_satisfaction.R")
print(probability_of_satisfaction)
@
\caption{Probability of satisfaction levels  with overlayed age distribution in Poland.}
\label{probability_of_satisfaction}
\end{figure}
}
probability_of_satisfaction <- function(x){
for (i in 1:length(Satisfaction[1, ])) {
probability_of_satisfaction <- function(x){
for (i in 1:length(Satisfaction[1, ])) {
View(dane)
probability_of_satisfaction <- function(Satisfaction){
for (i in 1:length(satisfaction[1, ])) {
y[, i] = ordered_Satisfaction[, i]/length(Satisfaction[, i])}
}
#source("./Scripts/data_generation_and_description.R") #  Do download data in work space
attach(dane)                                           # to call the collumnes
ordered_Satisfaction <- factor(
Satisfaction,
levels=   c("OKROPNE",
"NIESZCZESLIWE",
"NIEZBYT UDANE",
"ANI DOBRE, ANI ZLE",
"UDANE",
"DOSYC DOBRE",
"WSPANIALE"),
ordered=TRUE
)
probability_of_satisfaction <- function(Satisfaction){
for (i in 1:length(satisfaction[1, ])) {
y[, i] = ordered_Satisfaction[, i]/length(Satisfaction[, i])}
}
histogram_probability_of_satisfaction <-
qplot(
Age_in_2007,
y=probability_of_satisfaction,
data=dane,
xlab = "Age in 2007",
ylab = "Number of people",
geom="bar",
binwidth = 3,
fill = ordered_Satisfaction
) +
coord_flip() +                                          # horizontal becomes vertical, and vertical, horizontal
scale_fill_brewer(palette=2, name="Satisfaction level") # colored pallet in legend
detach(dane)
#print(histogram_probability_of_satisfaction)
print(histogram_probability_of_satisfaction)
probability_of_satisfaction <- function(Satisfaction){
for (i in 1:length(satisfaction[1, ])) {
y[, i] = ordered_Satisfaction[, i]/sum(length(Satisfaction[, i]))}
}
View(dane)
=======
install.packages("knitr")
con <- url("http://tofesi.mimuw.edu.pl/~cogito/smarterpoland/Diagnoza2011/diagnozaOsoby2011.RData")
load(con)
% !TeX program = XeLaTeX
source('~/.active-rstudio-document', echo=TRUE)
% !TeX program = xetex
system.time(1:100000)
system.time(1:100000)[3]
system.time(1:1000000)[3]
system.time(1:10000000)[3]
load("./Data/diagnozaOsoby2011.RData")
dim(diagnozaOsoby2011)
variables_of_interest <- c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dp72", "dc18", "dc56", "dp114", "dp115" )
?as.data.frame
head(diagnozaOsoby2011)
dane <- as.data.frame( diagnozaOsoby2011[,variables_of_interest])
variables_of_interest <- c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dp72", "dc18", "dc56", "dp114", "dp115" )
dane <- as.data.frame( diagnozaOsoby2011[,variables_of_interest])
diagnozaOsoby2011[,"WOJEWODZTWO"]
variables_of_interest <- c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dp72", "dc18", "dc56", "dp114", "dp115" )
dane <- diagnozaOsoby2011[,variables_of_interest]
variables_of_interest <- c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dp72", "dc18", "dc56", "dp114", "dp115" )
variables_of_interest
diagnozaOsoby2011[,c("WOJEWODZTWO", "PLEC")]
variables_of_interest <- c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dp72", "dc18", "dc56", "dp114", "dp115" )
diagnozaOsoby2011[,variables_of_interest]
ls()
diagnozaOsoby2011[,c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dp72", "dc18", "dc56", "dp114", "dp115" )]
diagnozaOsoby2011[,c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dp72", "dc18", "dc56", "dp114", "dp115")]
diagnozaOsoby2011[,c("WOJEWODZTWO", "PLEC")]
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "PLEC")])
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "PLEC", "KLASA_MIEJSOWOSCI")])
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "PLEC", "KLASA_MIEJSOWOSCI", "PLEC")])
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "PLEC", "KLASA_MIEJSOWOSCI", "PLEC")])
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC", "wiek2007")])
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC", "wiek2007", "dp3")])
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC", "wiek2007", "dp3", "dp72")])
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC", "wiek2007", "dp3", "dp72", "dc18")])
head(diagnozaOsoby2011[,c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC", "wiek2007", "dp3", "dp72", "dc18", "dc56")])
diagnozaOsoby2011$dc56
diagnozaOsoby2011$dp56
which(colnames(diagnozaOsoby2011)=="WOJEWODZTWO")
which(colnames(diagnozaOsoby2011)=="KLASA_MIEJSOWOSCI")
variables_of_interest <- c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dc18", "dp72",  "dp56", "dp114", "dp115" )
diagnozaOsoby2011[,c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dp72", "dc18", "dc56", "dp114", "dp115")]
diagnozaOsoby2011$dp56
variables_of_interest <- c("WOJEWODZTWO", "KLASA_MIEJSOWOSCI", "PLEC","wiek2007", "dp3", "dc18", "dp72",  "dp56", "dp114", "dp115" )
diagnozaOsoby2011[,variables_of_interest]
dane <- diagnozaOsoby2011[,variables_of_interest]
ls()
colnames(dane) <- c("Voivodship",
"Settlement class",
"Gender",
"Age in 2007",
"Sattisfaction",
"English Skills",
"Salary",
"Smoking",
"Time to office",
"Office distance"
)
head(dane)
variables_description <- c( "About Voivodship",
"About Settlement class",
"About Gender",
"About Age in 2007",
"About Sattisfaction",
"About English Skills",
"About Salary",
"About Smoking",
"About Time to office",
"About Office distance"
)
variables_desciption_table <- cbind(variables_of_interest, variables_description)
variables_desciption_table
xtable(variables_desciption_table)
library(xtable)
xtable(variables_desciption_table)
rownames(variables_desciption_table)
variables_desciption_table
?xtable
xtable(x=variables_desciption_table, caption="Hello")
rownames(variables_desciption_table) <- c()
xtable(x=variables_desciption_table, caption="Variable description.")
xtable(x=variables_desciption_table, caption="Variable description.", rownames=FALSE)
xtable(x=variables_desciption_table, caption="Variable description.", rownames=TRUE)
print(xtable(x=variables_desciption_table, caption="Variable description.", ))
xtable(x=variables_desciption_table, caption="Variable description.",include.rownames=FALSE )
variables_desciption_table <- xtable(x=variables_desciption_table, caption="Variable description." )
print(variables_desciption_table, include.rownames=FALSE)
write.csv2(dane, "Data/prepared_data.csv", row.names = FALSE)
dane <- read.csv2("Data/prepared_data.csv")
? readline
readline(prompt = "Do you want to?")
readline(prompt = "Do you want to? \n")
?to.string
time <- system.time({
con <- url("http://tofesi.mimuw.edu.pl/~cogito/smarterpoland/Diagnoza2011/diagnozaOsoby2011.RData")
load(con)
})
time
write.csv2(time, "Data/time_of_downloading_over_the_internet.csv", row.names = FALSE)
write.csv2(time[3], "Data/time_of_downloading_over_the_internet.csv", row.names = FALSE)
time_internet <- system.time({
con <- url("http://tofesi.mimuw.edu.pl/~cogito/smarterpoland/Diagnoza2011/diagnozaOsoby2011.RData")
load(con)
})
time_internet
time_downloaded <- system.time(read.csv2("Data/time_of_downloading_over_the_internet.csv"))
times <- cbind(time_internet[3], time_downloaded)
colnames(times) <- c("Downloading time", "Reading from file time")
write.csv2(times, "Data/time_of_downloading_over_the_internet.csv", row.names = FALSE)
read.csv2( "Data/time_of_downloading_over_the_internet.csv")
times <- cbind(time_internet[3], time_downloaded[3])
colnames(times) <- c("Downloading time", "Reading from file time")
write.csv2(times, "Data/time_of_downloading_over_the_internet.csv", row.names = FALSE)
read.csv2( "Data/time_of_downloading_over_the_internet.csv")
Z[1]
Z <- read.csv2( "Data/time_of_downloading_over_the_internet.csv")
Z[1]
Z[2]
source("./Scripts/data_generation.R")
source("./Scripts/data_generation.R")
source("./Scripts/testing_time_of_retrieving_data.R")
source("./Scripts/testing_time_of_retrieving_data.R")
ls()
rm(c("diagnozaOsoby2011", "time_downloaded"))
rm(diagnozaOsoby2011, time_downloaded)
ls()
rm(diagnozaOsoby2011, time_downloaded, times, time_internet)
ls()
install.packages("quantred")
install.packages("quantreg")
source("./Scripts/testing_time_of_retrieving_data.R")
ls()
dane <- read.csv2("Data/prepared_data.csv")
dane <- na.omit(dane)
variables_of_interest <- c( "Voivodship",
"Settlement_class",
"Gender",
"Age_in_2007",
"Satisfaction",
"English_Skills",
"Salary",
"Smoking",
"Time_to_office",
"Distance_to_office"
)
colnames(dane) <- variables_of_interest
attach(dane)
levels(Settlement_class) <- c("[100,200)", "[200,500)","[20,100)","more than 500", "less than 20", "village")
head(Settlement_class)
Settlement_class <- factor(
Settlement_class,
levels= c("village",
"less than 20",
"[20,100)",
"[100,200)",
"[200,500)",
"more than 500"
),
ordered=TRUE
)
colnames(Dane)
colnames(dane)
head(dane)
source('~/.active-rstudio-document', echo=TRUE)
attach(dane)
dane <- read.csv2("Data/prepared_data.csv")
dane <- na.omit(dane)
variables_of_interest <- c( "Voivodship",
"Settlement_class",
"Gender",
"Age_in_2007",
"Satisfaction",
"English_Skills",
"Salary",
"Smoking",
"Time_to_office",
"Distance_to_office"
)
colnames(dane) <- variables_of_interest
attach(dane)
levels(Settlement_class) <- c("[100,200)", "[200,500)","[20,100)","more than 500", "less than 20", "village")
Settlement_class <- factor(
Settlement_class,
levels= c("village",
"less than 20",
"[20,100)",
"[100,200)",
"[200,500)",
"more than 500"
),
ordered=TRUE
)
dane$Settlement_class
rm(list=ls())
dane$Settlement_class
Settlement_class
detach(dane)
Settlement_class
>>>>>>> cffd460ba70fc5120d0b7083f5b42061f128b47c
